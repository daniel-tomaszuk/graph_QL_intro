version: '3.7'

volumes:
  postgres:
    external: true
  logs:
    external: true
  redis:
    external: true
  rabbitmq:
    external: true

networks:
  python_backend:
    external: true

services:
  db:
    image: postgres:11.4
    ports:
      - 5432:5432
    env_file:
      - .config.env
    volumes:
      - postgres:/var/lib/postgresql/data/
      - logs:/var/log/
    networks:
      - python_backend

  web:
    build:
      context: .
      dockerfile: ./docker/Dockerfile
    env_file:
      - .config.env
    command: ./backend-entrypoint.sh
    stdin_open: true
    tty: true
    restart: always
    depends_on:
      - db
    ports:
      - 8000:8000
    networks:
      - python_backend

#  rabbitmq:
#    image: rabbitmq:3.7.17
#    container_name: rabbit
#    hostname: rabbit
#    env_file:
#      - ./config.dev.env
#    ports:
#      - 5672:5672
#    volumes:
#      - rabbitmq:/var/lib/rabbitmq/
#
#  redis:
#    image: redis:alpine
#    container_name: redis
#    hostname: redis
#    env_file:
#      - ./config.dev.env
#    ports:
#      - 6379:6379
#    volumes:
#      - redis:/var/lib/redis



#  celery_worker:
#    <<: *base
#    container_name: celery_worker
#    command: celery -A app worker -l info
#    environment:
#      - SKIP_WAIT=true
#
#  celery_beat:
#    <<: *base
#    container_name: celery_beat
#    command: celery -A app beat -l info
#    environment:
#      - SKIP_WAIT=true
